{
  "models": [
    {
      "name": "Error",
      "description": "An API error response.",
      "fields": [
        {
          "name": "message",
          "description": "A human-readable description of this error",
          "type": "string"
        },
        {
          "name": "code",
          "description": "Error code",
          "type": "string"
        },
        {
          "name": "fields",
          "description": "Affected request fields. The key is the name of the input parameter (e.g. from the request body or query string) and the value is a human-readable error message for that field.",
          "type": "Record<string, string | Record<string, string>>"
        }
      ]
    },
    {
      "name": "NewsletterData",
      "description": "A data field that is required to subscribe to this newsletter",
      "fields": [
        {
          "name": "name",
          "description": "The name of the field",
          "type": "string"
        },
        {
          "name": "description",
          "description": "Description of the field",
          "type": "string | undefined"
        },
        {
          "name": "type",
          "description": "The type of data",
          "type": "\"string\" | \"number\" | \"boolean\""
        },
        {
          "name": "required",
          "description": "Whether this field is required",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "Newsletter",
      "description": "A newsletter that you can subscribe to",
      "fields": [
        {
          "name": "id",
          "description": "The unique identifier for this newsletter",
          "type": "string"
        },
        {
          "name": "name",
          "description": "The name of this newsletter",
          "type": "string"
        },
        {
          "name": "data",
          "description": "Additional data that is required to subscribe to this newsletter",
          "type": "Record<string, NewsletterData>"
        }
      ]
    },
    {
      "name": "NewsletterSubscription",
      "description": "Your subscription to a newsletter",
      "fields": [
        {
          "name": "id",
          "description": "The ID of the subscription. Can be used to unsubscribe.",
          "type": "string"
        },
        {
          "name": "email",
          "description": "The email address of the subscriber",
          "type": "string"
        },
        {
          "name": "newsletter",
          "description": "The ID of the newsletter that was subscribed to",
          "type": "string"
        }
      ]
    },
    {
      "name": "DatedNewsletterSubscription",
      "description": "A newsletter subscription with a creation date",
      "fields": [
        {
          "name": "id",
          "description": "The ID of the subscription. Can be used to unsubscribe.",
          "type": "string"
        },
        {
          "name": "email",
          "description": "The email address of the subscriber",
          "type": "string"
        },
        {
          "name": "newsletter",
          "description": "The ID of the newsletter that was subscribed to",
          "type": "string"
        },
        {
          "name": "date",
          "description": "The date the subscription was created",
          "type": "Date"
        }
      ]
    },
    {
      "name": "PartialToken",
      "description": "A token, however, the `permissions` field is not included",
      "fields": [
        {
          "name": "id",
          "description": "The ID or key of the token",
          "type": "string"
        },
        {
          "name": "created",
          "description": "Date and time when this token was created",
          "type": "Date"
        },
        {
          "name": "expires",
          "description": "Date and time when this token expires. Null if it never expires.",
          "type": "Date | null"
        },
        {
          "name": "internal",
          "description": "Whether this token is for internal use only, e.g. to power a session. In other words, an internal token is one that was **not** created by the client.",
          "type": "string | undefined"
        },
        {
          "name": "metadata",
          "description": "Additional metadata about this token",
          "type": "TokenMetadata"
        }
      ]
    },
    {
      "name": "Token",
      "description": "An authentication token",
      "fields": [
        {
          "name": "id",
          "description": "The ID or key of the token",
          "type": "string"
        },
        {
          "name": "created",
          "description": "Date and time when this token was created",
          "type": "Date"
        },
        {
          "name": "expires",
          "description": "Date and time when this token expires. Null if it never expires.",
          "type": "Date | null"
        },
        {
          "name": "permissions",
          "description": "Permission scopes that this token holds",
          "type": "string[]"
        },
        {
          "name": "internal",
          "description": "Whether this token is for internal use only, e.g. to power a session. In other words, an internal token is one that was **not** created by the client.",
          "type": "string | undefined"
        },
        {
          "name": "metadata",
          "description": "Additional metadata about this token",
          "type": "TokenMetadata"
        }
      ]
    },
    {
      "name": "TokenMetadata",
      "description": "Token metadata",
      "fields": [
        {
          "name": "note",
          "description": "A user-supplied note for this token",
          "type": "string | undefined"
        }
      ]
    }
  ],
  "operations": {
    "newsletter": {
      "type": "namespace",
      "operations": {
        "list": {
          "type": "operation",
          "description": "List newsletters",
          "method": "GET",
          "path": "/newsletter",
          "parameters": {
            "query": {
              "limit": {
                "description": "The number of newsletters to return per page. No more than 50.",
                "default": "10",
                "type": "number",
                "required": false
              },
              "page": {
                "description": "The page number. No more than 2³² (4294967296).",
                "default": "1",
                "type": "number",
                "required": false
              }
            }
          },
          "returns": [
            {
              "status": 200,
              "type": "Newsletter[]"
            }
          ]
        },
        "get": {
          "type": "operation",
          "description": "Get newsletter",
          "method": "GET",
          "path": "/newsletter/:id",
          "parameters": {
            "path": {
              "id": {
                "description": "A newsletter ID",
                "type": "string",
                "required": true
              }
            }
          },
          "returns": [
            {
              "status": 200,
              "type": "Newsletter"
            },
            {
              "status": 404,
              "type": "Error & {code: \"RESOURCE_NOT_FOUND\"}"
            }
          ]
        },
        "subscribe": {
          "type": "operation",
          "description": "Subscribe to newsletter",
          "method": "POST",
          "path": "/newsletter/:id/subscribe",
          "parameters": {
            "path": {
              "id": {
                "description": "A newsletter ID",
                "type": "string",
                "required": true
              }
            },
            "body": {
              "email": {
                "description": "Subscriber's email address",
                "type": "string",
                "required": true
              },
              "data": {
                "description": "Additional data that this newsletter requires",
                "type": "Record<string, string | number | boolean>",
                "required": false
              }
            }
          },
          "returns": [
            {
              "status": 201,
              "type": "NewsletterSubscription"
            },
            {
              "status": 404,
              "type": "Error & {code: \"RESOURCE_NOT_FOUND\"}"
            },
            {
              "status": 422,
              "type": "Error & {code: \"INVALID_DATA\"}"
            },
            {
              "status": 409,
              "type": "Error & {code: \"CONFLICT\"}"
            }
          ]
        }
      }
    },
    "newsletters": {
      "type": "namespace",
      "operations": {
        "unsubscribe": {
          "type": "operation",
          "description": "Revoke a subscription (unsubscribe)",
          "method": "POST",
          "path": "/newsletters/unsubscribe",
          "parameters": {
            "body": {
              "subscription": {
                "description": "The ID of the subscription to revoke",
                "type": "string",
                "required": true
              }
            }
          },
          "returns": [
            {
              "status": 204,
              "type": "void"
            },
            {
              "status": 404,
              "type": "Error & {code: \"RESOURCE_NOT_FOUND\"}"
            },
            {
              "status": 422,
              "type": "Error & {code: \"INVALID_DATA\"}"
            }
          ]
        },
        "listSubscriptions": {
          "type": "operation",
          "description": "List subscriptions of the authenticated user",
          "token": "newsletter.subscriptions.list.own",
          "method": "GET",
          "path": "/newsletters/subscriptions",
          "parameters": {
            "query": {
              "limit": {
                "description": "The number of subscriptions to return per page. No more than 50.",
                "default": "10",
                "type": "number",
                "required": false
              },
              "page": {
                "description": "The page number. No more than 2³² (4294967296).",
                "default": "1",
                "type": "number",
                "required": false
              }
            }
          },
          "returns": [
            {
              "status": 200,
              "type": "DatedNewsletterSubscription[]"
            }
          ]
        }
      }
    },
    "token": {
      "type": "namespace",
      "operations": {
        "list": {
          "type": "operation",
          "description": "List tokens of user",
          "token": "tokens.list.own",
          "method": "GET",
          "path": "/token",
          "parameters": {
            "query": {
              "limit": {
                "description": "The number of tokens to return per page. No more than 50.",
                "default": "10",
                "type": "number",
                "required": false
              },
              "page": {
                "description": "The page number. No more than 2³² (4294967296).",
                "default": "1",
                "type": "number",
                "required": false
              },
              "internal": {
                "description": "Internal tokens are returned as well if this parameter is present.",
                "type": "any",
                "required": false
              }
            }
          },
          "returns": [
            {
              "status": 200,
              "type": "PartialToken[]"
            }
          ]
        },
        "create": {
          "type": "operation",
          "description": "Create token",
          "token": "tokens.create.own",
          "method": "POST",
          "path": "/token",
          "parameters": {
            "body": {
              "permissions": {
                "description": "List of permissions to grant to the token. You must already have each of these permissions with your current token.",
                "type": "string[]",
                "required": true
              },
              "lifetime": {
                "description": "Lifetime of the token in seconds. If null, the token will never expire (not recommended). Max: 31560000 (1 year). Min: 60 (1 minute).",
                "type": "number",
                "required": true
              },
              "note": {
                "description": "A user-specified note to label the token. Max length: 2⁸ (256) characters.",
                "type": "string",
                "required": false
              }
            }
          },
          "returns": [
            {
              "status": 201,
              "type": "Token"
            },
            {
              "status": 422,
              "type": "Error & {code: \"INVALID_DATA\"}"
            }
          ]
        },
        "get": {
          "type": "operation",
          "description": "Get token details",
          "token": "tokens.get.own",
          "method": "GET",
          "path": "/token/:id",
          "parameters": {
            "path": {
              "id": {
                "description": "The ID of the token to get. Specify `current` to get information about the token that was used to authenticate the request.",
                "type": "string",
                "required": true
              }
            }
          },
          "returns": [
            {
              "status": 200,
              "type": "Token"
            },
            {
              "status": 404,
              "type": "Error & {code: \"RESOURCE_NOT_FOUND\"}"
            },
            {
              "status": 422,
              "type": "Error & {code: \"INVALID_DATA\"}"
            }
          ]
        },
        "revoke": {
          "type": "operation",
          "description": "Revoke token",
          "token": "tokens.revoke.own",
          "method": "DELETE",
          "path": "/token/:id",
          "parameters": {
            "path": {
              "id": {
                "description": "The ID of the token to revoke. Specify `current` to revoke the token that was used to authenticate the request.",
                "type": "string",
                "required": true
              }
            }
          },
          "returns": [
            {
              "status": 204,
              "type": "void"
            },
            {
              "status": 404,
              "type": "Error & {code: \"RESOURCE_NOT_FOUND\"}"
            },
            {
              "status": 422,
              "type": "Error & {code: \"INVALID_DATA\"}"
            },
            {
              "status": 400,
              "type": "Error & {code: \"MODIFICATION_NOT_ALLOWED\"}"
            }
          ]
        }
      }
    },
    "tokens": {
      "type": "namespace",
      "operations": {
        "refresh": {
          "type": "operation",
          "description": "Refresh current token. The token that was used to authenticate the request will be deleted. A new token with a new ID but the same permissions will be created and returned. The lifespan of the new token will be the same as the old one, starting from the time of the request. This operation effectively allows a token to be used indefinitely.",
          "token": "token.refresh",
          "method": "POST",
          "path": "/token/refresh",
          "parameters": {},
          "returns": [
            {
              "status": 201,
              "type": "Token"
            },
            {
              "status": 422,
              "type": "Error & {code: \"INVALID_DATA\"}"
            }
          ]
        }
      }
    },
    "auth": {
      "type": "namespace",
      "operations": {
        "register": {
          "type": "operation",
          "description": "Create an account and session. After signing up, a welcome e-mail is sent to confirm your e-mail address.\n\n> **Note**: Registering an account can only be performed from residential IP. Proxying this endpoint will likely not work. Creating multiple/alternate accounts is not allowed as per the Terms of Service.",
          "method": "POST",
          "path": "/auth/register",
          "parameters": {
            "body": {
              "username": {
                "description": "The username to use for the account. Must be between 3 and 32 characters long. Cannot start with `user_`. May contain only letters, numbers, dashes and underscores. Must be unique.",
                "type": "string",
                "required": true
              },
              "email": {
                "description": "The e-mail address to register. A valid unique non-disposable e-mail that can receive mail is required.",
                "type": "string",
                "required": true
              },
              "password": {
                "description": "The password to use for the account. Must be at least 15 characters, or 8 characters if it contains a mix of letters, numbers and symbols.",
                "type": "string",
                "required": true
              }
            }
          },
          "returns": [
            {
              "status": 201,
              "type": "{session: string}",
              "description": "Session token. Also returned in `Set-Cookie` header."
            },
            {
              "status": 422,
              "type": "Error & {code: \"INVALID_DATA\"}"
            },
            {
              "status": 403,
              "type": "Error & {code: \"IP_REJECTED\"}"
            }
          ]
        }
      }
    }
  }
}
